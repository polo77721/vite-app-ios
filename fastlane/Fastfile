# Uncomment the line if you want fastlane to automatically update itself
# update_fastlane

setup_travis

default_platform(:ios)

platform :ios do
  desc "Push a new beta build to TestFlight"

  lane :vite_appstore do 
    increment_build_number_and_push_git
    match_profile
    build_app(workspace: "Vite.xcworkspace", scheme: "Vite")
    upload_to_testflight(skip_waiting_for_build_processing: true)
    upload_dysm
  end

  lane :vite_test do 
    increment_build_number_and_push_git
    match_profile
    version_number = get_version_number(xcodeproj: "Vite.xcodeproj", target: "Vite-test")
    build_number = get_build_number(xcodeproj: "Vite.xcodeproj")
    add_badge(shield: version_number + "-" + build_number + "-" + "orange", no_badge: true)
    build_app(workspace: "Vite.xcworkspace", scheme: "Vite-test")
    upload_to_testflight(skip_waiting_for_build_processing: true)
    upload_dysm
  end

  lane :vite_enterprise do 
    # match(type: "adhoc", app_identifier: "net.vite.wallet.ep",  clone_branch_directly: true)
    build_ios_app(workspace: "Vite.xcworkspace", configuration: "Release", scheme: "Vite-enterprise", export_method: "ad-hoc", clean: true, include_bitcode: false)
    upload_dysm
  end

  lane :match_profile do 
    match(type: "appstore", app_identifier: "net.vite.wallet",  clone_branch_directly: true)
    match(type: "appstore", app_identifier: "net.vite.wallet.PushService",  clone_branch_directly: true)
  end

  lane :increment_build_number_and_push_git do 
    increment_build_number
    push_git
  end

  desc "push git local code"
  lane :push_git do 
  git_add(path: ".")
  build_number = get_build_number
  git_commit(path: ".", message: "Jenkins Version Bump "+ build_number)
  branch = ENV["TRAVIS_BRANCH"]
  push_to_git_remote(remote_branch: branch, force: false)
  end

  desc "create new pr in github argument base is base branch"
  lane :pr do |options|
  create_pull_request(
    api_token: nil,   
    repo: "vitelabs/vite-app-ios",
    title: "[pr] merge new feature",
    head: nil,
    base: options[:base], 
    body: "Please pull this in! and find some bugs",       
    api_url: nil
  )
  end

  desc "upload to Beta by Crashlytics"
  lane :upload_dysm do 
    crashlytics(
      # keys for organization: vite
      # api_token: ENV["crashlytics_api_token"],
      # build_secret: ENV["crashlytics_build_secret"],
      api_token: "2964cce72aaa8182e1fccc9ba9e3965e041ca47d",
      build_secret: "4dc6d901eed1d8425c5ecf0a7e5a8b2875c9c7307012a90ad4bbe03a1039eb87",
      debug: true,
      crashlytics_path: "./Pods/Crashlytics/submit"
    )
  end
  
end







